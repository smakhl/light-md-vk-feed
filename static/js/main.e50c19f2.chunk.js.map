{"version":3,"sources":["components/theme.ts","vk/index.ts","components/Photo.tsx","components/Attachment.tsx","components/Post.tsx","components/Feed.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","getPosts","Promise","resolve","reject","VK","Api","call","v","count","filters","source_ids","max_photos","result","response","groupById","keyBy","groups","posts","items","map","rawPost","dateRaw","date","makeDateFromUnixTime","source_name","source_id","name","avatar_src","photo_50","url","makePostUrl","mapPost","reverse","console","log","unixTimeStamp","Date","post","post_id","init","apiId","Photo","sizes","className","srcSet","s","src","width","join","alt","useStyles","makeStyles","photo","linkPhoto","flex","minWidth","maxWidth","icon","color","Attachment","props","classes","att","attachment","type","GridListTile","component","video","image","GridListTileBar","title","subtitle","description","id","Link","href","link","target","rel","Paper","style","display","minHeight","margin","variant","justifyContent","alignItems","padding","Typography","lang","fontSize","doc","ext","Video","useState","isShownPlayer","setIsShownPlayer","preview","autoPlay","controls","position","onClick","top","left","transform","height","postText","wordBreak","whiteSpace","Post","attachments","i","Box","my","Card","CardHeader","subheader","toLocaleString","avatar","Avatar","CardContent","text","CardActions","Button","size","Feed","setPosts","useEffect","a","Container","length","CircularProgress","App","isLoggedIn","setIsLoggedIn","timeout","setTimeout","Auth","getLoginStatus","status","clearTimeout","ThemeProvider","CssBaseline","login","wallAccessCode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e50c19f2.chunk.js","sourcesContent":["import { red } from \"@material-ui/core/colors\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#556cd6\",\r\n    },\r\n    secondary: {\r\n      main: \"#19857b\",\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: \"#f5f5f5\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { keyBy } from \"lodash-es\";\n\n// https://vk.com/dev/permissions\nconst wallAccessCode = 8192;\nconst friendsAccessCode = 2;\nconst ACCESS_LEVEL = wallAccessCode + friendsAccessCode;\nconst APP_ID = 7412293;\n\nVK.init({\n  apiId: APP_ID,\n});\n\nexport function login(): Promise<vk.OpenAPI.Auth.LoginStatus> {\n  return new Promise((resolve, reject) => {\n    VK.Auth.login((result) => {\n      console.log(\"ðŸš€ ~ VK.Auth.login ~ result\", result);\n      if (result.status === \"connected\") {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, ACCESS_LEVEL);\n  });\n}\n\nexport function logout(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    VK.Auth.logout(() => {\n      resolve();\n    });\n  });\n}\n\nexport function getIsLoggedIn(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => {\n      resolve(false);\n    }, 2000);\n\n    VK.Auth.getLoginStatus((response) => {\n      console.log(\"ðŸš€ ~ VK.Auth.getLoginStatus ~ response\", response);\n\n      const { status } = response;\n      clearTimeout(timeout);\n      resolve(status === \"connected\");\n    });\n  });\n}\n\nexport function getPosts() {\n  return new Promise((resolve, reject) => {\n    VK.Api.call(\n      \"newsfeed.get\",\n      {\n        v: \"5.130\",\n        count: 100,\n        filters: \"post\",\n        source_ids: \"groups,pages\",\n        max_photos: 100,\n        // start_time: 1618823834,\n        // end_time: 1618823834,\n      },\n      function (result) {\n        const { response } = result;\n        if (!response) {\n          reject(result);\n          return;\n        }\n\n        // console.log(\"ðŸš€ ~ returnnewPromise ~ response\", response);\n        const groupById = keyBy(response.groups, \"id\");\n        const posts = response.items\n          .map((rawPost: any) => mapPost(rawPost, groupById))\n          .reverse();\n        console.log(\"ðŸš€ ~ returnnewPromise ~ posts\", posts);\n        resolve(posts);\n      }\n    );\n  });\n}\n\nfunction mapPost(rawPost: any, groupById: any) {\n  return {\n    ...rawPost,\n    dateRaw: rawPost.date,\n    date: makeDateFromUnixTime(rawPost.date),\n    source_name: groupById[-rawPost.source_id].name,\n    avatar_src: groupById[-rawPost.source_id].photo_50,\n    url: makePostUrl(rawPost),\n  };\n}\n\nfunction makeDateFromUnixTime(unixTimeStamp: number) {\n  return new Date(unixTimeStamp * 1000);\n}\n\nfunction makePostUrl(post: any) {\n  return `https://vk.com/wall${post.source_id}_${post.post_id}`;\n}\n","export function Photo({\r\n  sizes,\r\n  className,\r\n}: {\r\n  sizes: { url?: string; src?: string; width: number }[];\r\n  className?: string;\r\n}) {\r\n  return (\r\n    <img\r\n      srcSet={sizes.map((s) => `${s.url ?? s.src} ${s.width}w`).join(\",\")}\r\n      className={className}\r\n      alt=\"\"\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Link,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport PlayIcon from \"@material-ui/icons/PlayCircleFilledOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Photo } from \"./Photo\";\r\n\r\nconst useStyles = makeStyles({\r\n  photo: {\r\n    width: \"100%\",\r\n  },\r\n  linkPhoto: {\r\n    flex: \"1 1 0\",\r\n    minWidth: 0,\r\n    maxWidth: \"40%\",\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n});\r\n\r\nexport function Attachment(props: any) {\r\n  const classes = useStyles();\r\n\r\n  const att = props.attachment;\r\n\r\n  if (att.type === \"photo\") {\r\n    return (\r\n      <div>\r\n        <Photo className={classes.photo} sizes={att.photo.sizes} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (att.type === \"video\") {\r\n    return (\r\n      <GridListTile component=\"div\" key={att.video.id}>\r\n        <Photo className={classes.photo} sizes={att.video.image} />\r\n        <GridListTileBar\r\n          title={att.video.title}\r\n          subtitle={att.video.description}\r\n        />\r\n      </GridListTile>\r\n    );\r\n  }\r\n\r\n  if (att.type === \"link\") {\r\n    return (\r\n      <Link href={att.link.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <Paper\r\n          style={{ display: \"flex\", minHeight: \"80px\", margin: 8 }}\r\n          variant=\"outlined\"\r\n        >\r\n          {att.link.photo ? (\r\n            <Photo className={classes.linkPhoto} sizes={att.link.photo.sizes} />\r\n          ) : (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"80px\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <LinkIcon />\r\n            </div>\r\n          )}\r\n          <div\r\n            style={{\r\n              padding: 8,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flex: \"1 1 0\",\r\n              minWidth: 0,\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" lang=\"ru\">\r\n              {att.link.title} <LinkIcon fontSize=\"inherit\" />\r\n            </Typography>\r\n          </div>\r\n        </Paper>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  if (att.type === \"doc\" && att.doc.ext === \"gif\") {\r\n    return <Video attachment={att} />;\r\n  }\r\n\r\n  return (\r\n    <Typography variant=\"body2\" lang=\"ru\" className={classes.photo}>\r\n      {`Unsupported attachment: ${att.type}`}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction Video(props: any) {\r\n  const classes = useStyles();\r\n  const { attachment } = props;\r\n\r\n  const [isShownPlayer, setIsShownPlayer] = useState(false);\r\n\r\n  const src = attachment.doc.preview?.video?.src;\r\n  const preview = attachment.doc.preview?.photo?.sizes;\r\n\r\n  if (!src || !preview) return null;\r\n\r\n  return (\r\n    <div>\r\n      {isShownPlayer ? (\r\n        <video src={src} autoPlay controls className={classes.photo} />\r\n      ) : (\r\n        <div\r\n          style={{ position: \"relative\" }}\r\n          onClick={() => setIsShownPlayer(true)}\r\n        >\r\n          <PlayIcon\r\n            style={{\r\n              color: \"white\",\r\n              position: \"absolute\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"100px\",\r\n              height: \"100px\",\r\n            }}\r\n          />\r\n          <Photo className={classes.photo} sizes={preview} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @ts-ignore\r\nimport Linkify from \"react-linkify\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Attachment } from \"./Attachment\";\r\n\r\nconst useStyles = makeStyles({\r\n  postText: {\r\n    wordBreak: \"break-word\",\r\n    whiteSpace: \"pre-wrap\",\r\n  },\r\n});\r\n\r\nexport function Post({ post }: { post: any }) {\r\n  const classes = useStyles();\r\n  const attachments = post.attachments?.map((att: any, i: number) => (\r\n    <Attachment attachment={att} key={i} />\r\n  ));\r\n\r\n  return (\r\n    <Box my={4}>\r\n      <Card\r\n        onClick={() => {\r\n          console.log(post);\r\n        }}\r\n      >\r\n        <CardHeader\r\n          title={post.source_name}\r\n          subheader={post.date.toLocaleString(\"ru\")}\r\n          avatar={<Avatar src={post.avatar_src}>ðŸ˜Š</Avatar>}\r\n        />\r\n        {attachments}\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textPrimary\"\r\n            component=\"p\"\r\n            lang=\"ru\"\r\n            className={classes.postText}\r\n          >\r\n            <Linkify>{post.text}</Linkify>\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button href={post.url} target=\"_blank\" size=\"small\" color=\"primary\">\r\n            Open in VK\r\n          </Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Share\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Post } from \"./Post\";\r\nimport { getPosts } from \"../vk\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport function Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const posts = await getPosts();\r\n      setPosts(posts as any);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      {posts.length === 0 && <CircularProgress />}\r\n\r\n      {posts.map((post: any) => (\r\n        <Post post={post} key={post.post_id} />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\n// import Link from \"@material-ui/core/Link\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport { getIsLoggedIn, login } from \"../vk\";\nimport Button from \"@material-ui/core/Button\";\nimport { Feed } from \"./Feed\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoggedIn(await getIsLoggedIn());\n      console.log(\"ðŸš€ ~ isLoggedIn\", isLoggedIn);\n    })();\n  }, [isLoggedIn]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {isLoggedIn === null && <CircularProgress />}\n      {isLoggedIn === false && (\n        <Button\n          variant=\"contained\"\n          onClick={async () => {\n            await login();\n            setIsLoggedIn(true);\n          }}\n        >\n          LOG IN\n        </Button>\n      )}\n      {isLoggedIn === true && <Feed />}\n    </ThemeProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}